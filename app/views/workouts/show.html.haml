.ui.large.secondary.workout.responsive.menu#main_menu
  .ui.container
    = link_to root_path, class: 'ui item' do
      %h1.ui.header fortify
    = link_to workouts_path, class: 'ui item' do
      %h3.ui.header Workouts
    .right.menu
      = link_to session_path, class: 'ui item', method: :delete do
        %h3.ui.header Sign Out
.ui.workout.segment
  .ui.container
    .ui.grid
      .ten.wide.column
        %h1.ui.header #{@workout.name}
      .six.wide.right.aligned.column
        .buttons
          = link_to start_workout_path(@workout), class: 'start link', remote: true do
            .ui.right.aligned.green.start.button Start
          .ui.icon.edit.actions.button
            %i.write.icon
            %i.checkmark.icon
    .ui.two.column.divided.stackable.add.grid
      .exercise.column
        %h2.ui.header Add an Exercise
        = form_for @exercise, url: workout_exercises_path(@workout), method: :post, html: {class: 'ui form'} do |f|
          .name.field
            = f.text_field :name, placeholder: 'Exercise Name'
          .two.fields
            .sets.field
              = f.text_field :sets, placeholder: '# of Sets'
            .reps.field
              = f.text_field :reps, placeholder: '# of Reps'
          .rest.field
            = f.text_field :minutes, placeholder: 'Rest Time Between Sets (M:S)'
          = f.hidden_field :rest
          = f.submit 'Add Exercise',  class: 'ui button'
      .rest.column
        %h2.ui.header Add a Rest
        = form_for @rest, url: workout_exercises_path(@workout), method: :post, html: {class: 'ui form'} do |f|
          .rest_time.field
            = f.text_field :minutes, placeholder: 'Rest Time (M:S)'
          = f.hidden_field :rest
          = f.submit 'Add Rest',  class: 'ui button'
    - @exercises.each do |exercise|
      .exercise.display.ui.stackable.grid
        - if exercise.rest
          .eleven.wide.column
            %h1.ui.header Rest
          .four.wide.column
            %h1.ui.header{exercise_id: exercise.id} #{exercise.minutes}:#{exercise.seconds.to_s.rjust(2, '0')}
          .one.wide.rest.middle.aligned.column
            %i.big.play.icon{exercise_id: exercise.id}
            %i.big.pause.icon{exercise_id: exercise.id}
          .one.wide.delete.middle.aligned.column
            = link_to workout_exercise_path(@workout, exercise), remote: true, method: :delete do
              %i.remove.big.icon
        - else
          .eleven.wide.column
            %h1.ui.header= exercise.name
            %h2.ui.header #{pluralize(exercise.sets, 'Set')} of #{pluralize(exercise.reps, 'Rep')}
          .four.wide.column
            %h1.ui.header{exercise_id: exercise.id} #{exercise.minutes}:#{exercise.seconds.to_s.rjust(2, '0')}
            %h2.ui.header Rest Between Sets
          .one.wide.exercise.middle.aligned.column
            %i.big.play.icon{exercise_id: exercise.id}
            %i.big.pause.icon{exercise_id: exercise.id}
          .one.wide.delete.middle.aligned.column
            = link_to workout_exercise_path(@workout, exercise), remote: true, method: :delete do
              %i.remove.big.icon
        :javascript
          $('.start.button').click(function() {
            var id = #{@exercises.first.id};
            var play = $('i.play[exercise_id="#{@exercises.first.id}"]');
            var pause = $('i.pause[exercise_id="#{@exercises.first.id}"]');
            var header = $('h1.ui.header[exercise_id="#{@exercises.first.id}"]');
            var d = new Date();
            d.setMinutes(d.getMinutes() + #{@exercises.first.minutes});
            d.setSeconds(d.getSeconds() + #{@exercises.first.seconds});
            header.countdown(d, function(event) {
              header.text(
                event.strftime('%M:%S')
              );
            });
            play.css('display', 'none');
            pause.css('display', 'block');
            play.unbind('click');
            play.click(function() {
              header.countdown('resume');
              play.css('display', 'none');
              pause.css('display', 'block');
            });
          });
          function set_up_#{exercise.id}() {
            $('i.play[exercise_id="#{exercise.id}"]').css('display', 'block');
            $('i.pause[exercise_id="#{exercise.id}"]').css('display', 'none');
            $('i.play[exercise_id="#{exercise.id}"]').click(function() {
              var d = new Date();
              d.setMinutes(d.getMinutes() + #{exercise.minutes});
              d.setSeconds(d.getSeconds() + #{exercise.seconds});
              $('h1.ui.header[exercise_id="#{exercise.id}"]').countdown(d, function(event) {
                $(this).text(
                  event.strftime('%M:%S')
                );
              });
              $(this).css('display', 'none');
              $('i.pause[exercise_id="#{exercise.id}"]').css('display', 'block');
              $(this).unbind('click');
              $(this).click(function() {
                $('h1.ui.header[exercise_id="#{exercise.id}"]').countdown('resume');
                $(this).css('display', 'none');
                $('i.pause[exercise_id="#{exercise.id}"]').css('display', 'block');
              });
            });
            $('h1.ui.header[exercise_id="#{exercise.id}"]').on('stop.countdown', function(event) {
              $(this).css('display', 'none');
              $('i.play[exercise_id="#{exercise.id}"]').css('display', 'block');
            });
            $('i.pause[exercise_id="#{exercise.id}"]').click(function() {
              $(this).css('display', 'none');
              $('i.play[exercise_id="#{exercise.id}"]').css('display', 'block');
              $('h1.ui.header[exercise_id="#{exercise.id}"]').countdown('pause');
            });
          }
          set_up_#{exercise.id}();
          $('h1.ui.header[exercise_id="#{exercise.id}"]').on('finish.countdown', function() {
            set_up_#{exercise.id}();
          });

